---
title: "Modflow"
---

# MODFLOW Concepts

Bach has been designed to provide a computationally efficient representation of
surface water for MODFLOW6. It does so by connecting to basic MODFLOW6 boundary
conditions: the river and drainage packages.

## Drainage

The drainage package can be simulated to agricultural drains, ditches, or
draining streams. The amount of water removed from the aquifer is proportional
to the difference between the groundwater head and the drainage elevation.
Drainage only occurs when the head is larger than the elevation; this boundary
condition does not allow infiltration into the groundwater.

$$
Q_{drain} = \left\{
    \begin{array}{ c l }
        C_{drain} (\phi - h_{drain}) & \quad \textrm{if } \phi > h_{drain} \\
        0                            & \quad \textrm{otherwise}
     \end{array}
\right.
$$

## River

The river package can both drain the groundwater, or infiltrate surface water
to the groundwater. It limits the amount of water that can infiltrate when
the groundwater head falls below the river bottom, in which cases it assumes
atmospheric pressure conditions underneath the surface water.

$$
Q_{river} = \left\{
    \begin{array}{ c l }
        C_{river} (\phi - h_{river}) & \quad \textrm{if } \phi > b_{river} \\
        C_{river} (h_{river} - b_{river}) & \quad \textrm{if } \phi <= b_{river}
     \end{array}
\right.
$$

In the Netherlands, it is somewhat common to make a distinction between the
drainage and infiltration conductance of surface waters. Drainage conductance
is often larger than the infiltration conductance due to clogging processes,
seepage through sides of the ditches, less contracted flow lines, etc.

$$
Q_{river} = \left\{
    \begin{array}{ c l }
        C_{river,drn} (\phi - h_{river}) & \quad \textrm{if } \phi > h_{river} \\
        C_{river,inf} (\phi - h_{river}) & \quad \textrm{if } \phi <= h_{river} \\
        C_{river,inf} (h_{river} - b_{river}) & \quad \textrm{if } \phi <= b_{river}
     \end{array}
\right.
$$

MODFLOW6 does not support this (currently), but an identical effect may be
achieved by "stacking" a drainage package on top of a river package with these
values:

$$
\begin{aligned}
h_{drain} = h_{river}
C_{drain} = C_{river,drn} - C{river,inf}
\end{aligned}
$$

## Numerical solution in MODFLOW

MODFLOW uses a backward-in-time implicit solution scheme. This creates a large
system of equations (a water balance for every cell), which it solves by
repeatedly solving a linearized system of equations instead. In matrix form,
this system of equations is expressed by:

$$
\mathbf{Ax} = \mathbf{b}
$$

Where $\mathbf{x}$ is a vector containing the head of every cell.

For the boundary conditions, this requires linearization of the flow equations.
Flow from outside of the aquifer (cell) may be represented by:

$$
a = p\phi + q
$$

(Equation 2-6 in the MODFLOW6 documentation [@langevin2017documentation].)

For e.g. a draining boundary condition, the flow is head dependent:

$$
a = C(h - \phi) = -C\phi + Ch
$$

With $C$ the conductance, $h$ the boundary head or elevation, and $\phi$
the groundwater head.

In MODFLOW's internal formulation, the term in $\mathbf{A}$ is called
"coefficient of head" or hcof. Terms in $\mathbf{b}$ are called "right hand
side" or rhs. We can separate the equation above:

$$
\begin{aligned}
p = \text{hcof} = -C \\
q = \textrm{rhs} = -Ch \\
a = -C\phi + Ch = \text{hcof} * \phi - \text{rhs}
\end{aligned}
$$

For every boundary condition, MODFLOW6 stores the `hcof` and `rhs` values. This
makes it quite convenient for us to compute the water budget for every boundary
condition: we simply multiply the hcof value by the head of the cell and
subtract the rhs.

Note that hcof may have a value of 0! For example, when for a river boundary
the $\phi <= b_{river}$ condition occurs, the flow into the cell is
controlled only by $h_{river}$ and $b_{river}$ (equal to recharge for the
linear solution).

## Iterative coupled solution

We can use a linearization to efficiently compute the flow from Bach's side as
well. In the iterative coupled solution, we are solving both MODFLOW6 and Bach
repeatedly, until they produce same drainage or infiltration (approximately).
One of Bach's `LocalSurfaceWater`s contains many MODFLOW cells with boundary
conditions. We could add every boundary condition to Bach's equations, but this
is costly and cumbersome.

Linearization allows us to "stack" (superpose) all the different boundary
conditions into a single, simple equation. In linear form, every equation takes
the form of:

$$
a = ph + q
$$

Note the $h$ rather than $\phi$, we are formulating from Bach's
perspective! We can sum all coefficients for p and q to provide a linear
groundwater response to Bach.

### Drainage

From Bach's perspective, the groundwater head is constant given a timestep,
so that:

$$
\begin{align}
p = -C \\
q = -C\phi
\end{align}
$$

When the head falls below the drainage elevation, the coefficients are 0.

### River

From Bach's persective, infiltration is never limited when the head falls below
the bottom:

$$
\begin{align}
p = -C \\
q = -Cb
\end{align}
$$

Otherwise, infiltration and drainage occur with the same equation as for the
drainage package:

$$
\begin{align}
p = -C \\
q = -C\phi
\end{align}
$$

# Assigning MODFLOW water levels

Principally, MODFLOW deals with water levels; Bach deals with water volumes.
The translation from a water volume to a water level should be a relatively
straightforward one:

$$
\Delta d = \frac{\Delta V}{A}
$$

However, the primary complication is that where Bach has **one** volume,
MODFLOW has many levels to adjust. The sum of all these adjustments times
their respective areas should result in the LSW volume change:

$$
\sum_{i=0}^{i=n} \Delta d_i A_i = \Delta V_{LSW}
$$

and

$$
h = b + d
$$

It should be obvious that there are many ways to distribute this volume change
across the adjustment of every boundary condition of every cell. The main
question is when a volume grows or decreases, how should this volume change be
distributed across the LSW?

The best method to find an answer to this question is to run a hydraulic model,
extract water heights, and compute the total volume. This can then be used as a
lookup table for every cell. These runs can also be used for parametrizing the
volume-discharge lookup tables. In coupling to Bach, we need only find the
appropriate volume and assign the associated water level. For efficiency, this
lookup table can be discretized in a limited number of steps, and in coupling
the level will be interpolated.

:::{.callout-note}
Great care is required when parametrizing these volume-level relationships.
As Bach does not know the properties of the surface water, it can perform
very limited validation of the volume-level lookup tables. As the total
volume of the LSW is distributed accross *all* boundary conditions, it
should be checked that the change of the water column for every boundary
condition matches the total volume change of the LSW.
:::

In principle, all (stationary!) hydraulic behavior of the LSW can be described
approximately by these lookup tables.

## Parametrization

In coupling Bach to MODFLOW6, relations translating the Bach volume must be
given for every every cell of every boundary condition. 

## Examples

To get a feeling for the simplifications and the errors of the approximation,
let's consider three oversimplified hydraulic models:

1. The LSW has a single water level.
2. The LSW has a single water depth.
3. The LSW has a water depth that linearly decreases with bed elevation.

To investigate these cases, we will assume a rectangular profile (constant
wetted area). This allows to create plots of cumulative wetted area versus
height, so that the area between the water level and the bed elevation equals
LSW volume.

## Test cases

In our test cases, we will work with the Dutch national groundwater model
(LHM). For testing, we simplify the top boundary conditions to just three
surface water "systems", from large to small:

1. Primary
2. Secondary
3. Tertiary

(Note: Bach has no knowledge of these systems. Any basin is represented by a
single volume.)

These systems are be separated due to their relatively small size in comparison
with relatively coarse cells of the groundwater model: most cells in the LHM
contain more than one surface water, and are included via representative
parameters which take the physical scaling into account.

In case of sufficiently small cell sizes, no overlap occurs and all surface
waters can be represented in a single grid.

For the purposes of testing, we have not created empirical volume-level
relationships for the surface water of every cell. Instead, we have chosen
for an (over)simplified representation over the hydraulic properties, which
makes it easy to verify the behavior of Bach and the coupling procedures:

1. Primary, secondary, and tertiary systems have a rectangular profile: the
  area of the surface water does not change with water level or volume.
2. Water depth is constant for a system within a basin.
3. Water depth increases linearly with volume. (This follows from 1.)
4. Water depth is distributed across the systems in a geometric progression:
  when the tertiary system contains 0.1 m of water, the secondary system contains
0.2 m, and the primary system contains 0.4 m.
5. Water depth is 0.0 m for all systems when basin volume is 0.0. (This follows from 4.)
6. The distribution of water occurs according to the surface water area (width
  times length) used for the LHM parametrization of river bed conductance.
  
An example of the resulting parameters for a single cell is shown in
@tbl-hupsel-v-h. The first row shows the water levels when the basin is empty.
The level for primary, secondary, and tertiary are equal to the bottom
elevation of the surface waters. The second row shows the volume and levels for
water depths of 0.4, 0.2, and 0.1 m. The third row shows the volume and levels
for a tenfold larger volume. This results in implausible water levels with
depths of 4.0, 2.0 and 1.0 m; the water level in the primary system is over
two meters higher than in the tertiary system. In reality, the surface waters
would overflow and surface ponding would occur; this mechanism is ignored
in this case for the sake simplicity.

| Volume (m3) | Primary (m NAP) | Secondary (m NAP) | Tertiary (m NAP) |
|-------------|-----------------|-------------------|------------------|
| 0.0         | 25.65           | 25.83             | 26.60            |
| 6843.1      | 26.05           | 26.03             | 26.70            |
| 68431.0     | 29.65           | 27.83             | 27.60            |

: Volume-level table for a single cell in the Hupsel basin. {#tbl-hupsel-v-h}

Image ... shows the volume of the first row of the cell based input for the
primary system. Symbology is set to unique values